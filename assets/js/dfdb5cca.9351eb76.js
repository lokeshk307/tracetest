"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[2016],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(n),h=r,m=u["".concat(c,".").concat(h)]||u[h]||d[h]||o;return n?a.createElement(m,s(s({ref:t},p),{},{components:n})):a.createElement(m,s({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=h;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:r,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},24253:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var a=n(87462),r=(n(67294),n(3905));const o={id:"k6",title:"Performance and Trace-Based Tests with Tracetest and k6",description:"Quickstart on how to use the Tracetest k6 Integration to enhance Performance Tests with Trace-Based Testing using Tracetest.",hide_table_of_contents:!1,keywords:["tracetest","trace-based testing","observability","distributed tracing","testing","k6","xk6","load testing","performance testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},s=void 0,i={unversionedId:"tools-and-integrations/k6",id:"tools-and-integrations/k6",title:"Performance and Trace-Based Tests with Tracetest and k6",description:"Quickstart on how to use the Tracetest k6 Integration to enhance Performance Tests with Trace-Based Testing using Tracetest.",source:"@site/docs/tools-and-integrations/k6.mdx",sourceDirName:"tools-and-integrations",slug:"/tools-and-integrations/k6",permalink:"/tools-and-integrations/k6",draft:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/tools-and-integrations/k6.mdx",tags:[],version:"current",frontMatter:{id:"k6",title:"Performance and Trace-Based Tests with Tracetest and k6",description:"Quickstart on how to use the Tracetest k6 Integration to enhance Performance Tests with Trace-Based Testing using Tracetest.",hide_table_of_contents:!1,keywords:["tracetest","trace-based testing","observability","distributed tracing","testing","k6","xk6","load testing","performance testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},sidebar:"examplesTutorialsSidebar",previous:{title:"Running Tracetest with Keptn",permalink:"/tools-and-integrations/keptn"},next:{title:"Running Tracetest Core with k6",permalink:"/tools-and-integrations/k6-core"}},c={},l=[{value:"Why is this important?",id:"why-is-this-important",level:2},{value:"The k6 Tracetest Extension",id:"the-k6-tracetest-extension",level:2},{value:"How It Works",id:"how-it-works",level:2},{value:"Today You&#39;ll Learn About Performance &amp; Trace-Based Tests",id:"today-youll-learn-about-performance--trace-based-tests",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Installing the k6 Tracetest Extension",id:"installing-the-k6-tracetest-extension",level:2},{value:"Using the Tracetest Extension For Load Tests",id:"using-the-tracetest-extension-for-load-tests",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"Pokeshop Demo App",id:"pokeshop-demo-app",level:3},{value:"Docker Compose Network",id:"docker-compose-network",level:3},{value:"Creating Your Tracetest Test Definition",id:"creating-your-tracetest-test-definition",level:2},{value:"Creating Your k6 Script",id:"creating-your-k6-script",level:2},{value:"Tracetest Agent Connects to Tracetest",id:"tracetest-agent-connects-to-tracetest",level:2},{value:"Run the Pokeshop Demo App and the Tracetest Agent",id:"run-the-pokeshop-demo-app-and-the-tracetest-agent",level:2},{value:"Run the k6 Script",id:"run-the-k6-script",level:2},{value:"What&#39;s Next?",id:"whats-next",level:2},{value:"Learn More",id:"learn-more",level:2}],p={toc:l},u="wrapper";function d(e){let{components:t,...o}=e;return(0,r.kt)(u,(0,a.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/kubeshop/tracetest/tree/main/examples/tracetest-k6"},"Check out the source code on GitHub here."))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://app.tracetest.io/"},"Tracetest")," is a testing tool based on ",(0,r.kt)("a",{parentName:"p",href:"https://opentelemetry.io/"},"OpenTelemetry")," that allows you to test your distributed application. It allows you to use data from distributed traces generated by OpenTelemetry to validate and assert if your application has the desired behavior defined by your test definitions."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://k6.io/"},"k6")," is an open-source performance testing tool used for testing the performance of APIs, microservices, and websites. It is designed to be developer-centric, making it easy for developers to write and maintain performance tests as code."),(0,r.kt)("h2",{id:"why-is-this-important"},"Why is this important?"),(0,r.kt)("p",null,"k6 is it's a great tool in its own right that allows you to replicate most of the production challenges you might encounter. But, as with all of the tools that only test the initial transaction between the client side and the server, you can only run validations against the immediate response from the service."),(0,r.kt)("div",{style:{position:"relative",paddingBottom:"62.5%",height:"0"}},(0,r.kt)("iframe",{src:"https://www.loom.com/embed/5c5e1261bb0b4fefa30081294378908c",frameborder:"0",webkitallowfullscreen:!0,mozallowfullscreen:!0,allowfullscreen:!0,width:"100%",style:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"}})),(0,r.kt)("h2",{id:"the-k6-tracetest-extension"},"The k6 Tracetest Extension"),(0,r.kt)("p",null,"With the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/kubeshop/xk6-tracetest"},"k6 Tracetest extension"),", you will unlock the power of OpenTelemetry that allows you to run deeper testing based on the traces and spans generated by each of the checkpoints that you define within your services."),(0,r.kt)("p",null,"Language and Vendor agnostic, with this extension you can use your existing Tracing Data Store and Setup to leverage the work you have already done to instrument your services."),(0,r.kt)("h2",{id:"how-it-works"},"How It Works"),(0,r.kt)("p",null,"The following is high level sequence diagram on how k6 and Tracetest interact with the different pieces of the system."),(0,r.kt)("mermaid",{value:"sequenceDiagram\n    k6->>+Extension: Trigger HTTP Request\n    Extension->>+Extension: Generate Trace ID and propagation headers\n    Extension->>+Instrumented Service: Sends request with tracing metadata\n    Instrumented Service->>+Data Store: Sends Telemetry data\n    Instrumented Service--\x3e>-Extension: Returns Response\n    Extension->>+Tracetest Agent: Executes the test run using the trace id\n    Tracetest Agent->>+Data Store: Fetches trace using the trace id\n    Data Store--\x3e>-Tracetest Agent: Returns trace\n    Tracetest Agent->>+Tracetest: Sync and store trace in Tracetest\n    Tracetest->>+Tracetest: Runs Assertions against the resulted trace\n    Tracetest->>+Tracetest Agent: Return Assertion results\n    Tracetest Agent--\x3e>-Extension: Returns the run results\n    Extension--\x3e>-k6: Display summary and results"}),(0,r.kt)("h2",{id:"today-youll-learn-about-performance--trace-based-tests"},"Today You'll Learn About Performance & Trace-Based Tests"),(0,r.kt)("p",null,"This is a simple quick start guide on how to run the Tracetest k6 extension to run enhanced performance tests with trace-based testing. The infrastructure will use the Pokeshop Demo as a testing ground, triggering requests against it and generating telemetry data."),(0,r.kt)("h2",{id:"requirements"},"Requirements"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Tracetest Account"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Sign up to ",(0,r.kt)("a",{parentName:"li",href:"https://app.tracetest.io"},(0,r.kt)("inlineCode",{parentName:"a"},"app.tracetest.io"))," or follow the ",(0,r.kt)("a",{parentName:"li",href:"/getting-started/installation"},"get started")," docs."),(0,r.kt)("li",{parentName:"ul"},"Create an ",(0,r.kt)("a",{parentName:"li",href:"/concepts/environments"},"environment"),"."),(0,r.kt)("li",{parentName:"ul"},"Create an ",(0,r.kt)("a",{parentName:"li",href:"/concepts/environment-tokens"},"environment token"),"."),(0,r.kt)("li",{parentName:"ul"},"Have access to the environment's ",(0,r.kt)("a",{parentName:"li",href:"/configuration/agent"},"agent API key"),".")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Tracetest CLI"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"/getting-started/installation#install-the-tracetest-cli"},"Download the CLI"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Configure the CLI to connect to your Tracetest environment with the environment token you created in the step above."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"  tracetest configure -t <tttoken_1234567890>\n")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"xk6:")," To start using the Tracetest k6 binary you need to have the xk6 builder installed on your machine. You can ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/grafana/xk6/"},"follow the instructions defined in this page")," to do that."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Docker"),": Have ",(0,r.kt)("a",{parentName:"p",href:"https://docs.docker.com/get-docker/"},"Docker")," and ",(0,r.kt)("a",{parentName:"p",href:"https://docs.docker.com/compose/install/"},"Docker Compose")," installed on your machine."),(0,r.kt)("h2",{id:"installing-the-k6-tracetest-extension"},"Installing the k6 Tracetest Extension"),(0,r.kt)("p",null,"Installing the k6 Tracetest extension is as easy as running the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"xk6 build v0.42.0 --with github.com/kubeshop/xk6-tracetest\n")),(0,r.kt)("p",null,"This will generate the ",(0,r.kt)("inlineCode",{parentName:"p"},"k6-tracetest")," binary in the current directory."),(0,r.kt)("p",null,"The instructions can be also found in the main ",(0,r.kt)("a",{parentName:"p",href:"https://k6.io/docs/extensions/get-started/bundle/"},"k6 docs")," in case you need to combine multiple extensions into one binary."),(0,r.kt)("h2",{id:"using-the-tracetest-extension-for-load-tests"},"Using the Tracetest Extension For Load Tests"),(0,r.kt)("p",null,"Once you have installed the k6 Tracetest binary, you can use the base k6 functionality to run load tests against instrumented services and Tracetest to run checks against the resulting telemetry data."),(0,r.kt)("h2",{id:"project-structure"},"Project Structure"),(0,r.kt)("p",null,"The project is built with Docker Compose."),(0,r.kt)("h3",{id:"pokeshop-demo-app"},"Pokeshop Demo App"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/live-examples/pokeshop/overview"},"Pokeshop Demo App")," is a complete example of a distributed application using different backend and front-end services, implementation code is written in Typescript."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose-yaml")," file in the root directory is for the Pokeshop Demo app, the OpenTelemetry setup and the ",(0,r.kt)("a",{parentName:"p",href:"/concepts/agent"},"Tracetest Agent"),"."),(0,r.kt)("h3",{id:"docker-compose-network"},"Docker Compose Network"),(0,r.kt)("p",null,"All ",(0,r.kt)("inlineCode",{parentName:"p"},"services")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml")," are on the same network and will be reachable by hostname from within other services. For example, ",(0,r.kt)("inlineCode",{parentName:"p"},"jaeger:14250")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"collector.config.yaml")," file will map to the ",(0,r.kt)("inlineCode",{parentName:"p"},"jaeger")," service, where port ",(0,r.kt)("inlineCode",{parentName:"p"},"14250")," is the port where the Jaeger all-in-one instance accepts telemetry data."),(0,r.kt)("h2",{id:"creating-your-tracetest-test-definition"},"Creating Your Tracetest Test Definition"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"tests/test.yaml")," file contains the test definition that will be used to run the tests. It uses the trace id trigger which is required for the k6 integrations as well as adding assertions using test-based TDD patterns."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'type: Test\nspec:\n  id: kc_MgKoVR\n  name: K6\n  description: K6\n  trigger:\n    type: traceid\n    traceid:\n      id: ${env:TRACE_ID}\n  specs:\n    - selector: span[tracetest.span.type="general" name="import pokemon"]\n      name: Should have imported the pokemon\n      assertions:\n        - attr:tracetest.selected_spans.count = 1\n    - selector: |-\n        span[tracetest.span.type="http" net.peer.name="pokeapi.co" http.method="GET"]\n      name: Should trigger a request to the POKEAPI\n      assertions:\n        - attr:http.url   =  "https://pokeapi.co/api/v2/pokemon/6"\n    - selector: span[tracetest.span.type="database" name="create postgres.pokemon"]\n      name: Should insert the pokemon to the DB\n      assertions:\n        - attr:db.result | json_path \'.name\'  =  "charizard"\n')),(0,r.kt)("p",null,"Create the test using the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tracetest apply test -f ./tests/test.yaml\n")),(0,r.kt)("h2",{id:"creating-your-k6-script"},"Creating Your k6 Script"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"import-pokemon.js")," file contains the k6 script that will be used to run the performance tests. It is a simple script that will trigger a ",(0,r.kt)("inlineCode",{parentName:"p"},"POST")," request to the ",(0,r.kt)("inlineCode",{parentName:"p"},"/pokemon/import")," Pokeshop Demo app endpoint."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'import { Http, Tracetest } from "k6/x/tracetest";\nimport { sleep } from "k6";\n\nexport const options = {\n  vus: 1,\n  duration: "5s",\n};\n\nconst http = new Http();\nconst testId = "kc_MgKoVR";\nconst tracetest = Tracetest();\n\nlet pokemonId = 6; // charizard\n\nexport default function () {\n  const url = "http://localhost:8081/pokemon/import";\n  const payload = JSON.stringify({\n    id: pokemonId++,\n  });\n  const params = {\n    headers: {\n      "Content-Type": "application/json",\n    },\n    tracetest: {\n      testId,\n    },\n  };\n\n  const response = http.post(url, payload, params);\n\n  tracetest.runTest(\n    response.trace_id,\n    {\n      test_id: testId,\n      variable_name: "TRACE_ID",\n      should_wait: true,\n    },\n    {\n      id: "123",\n      url,\n      method: "GET",\n    }\n  );\n\n  sleep(1);\n}\n\nexport function handleSummary() {\n  return {\n    stdout: tracetest.summary(),\n  };\n}\n\nexport function teardown() {\n  tracetest.validateResult();\n}\n')),(0,r.kt)("h2",{id:"tracetest-agent-connects-to-tracetest"},"Tracetest Agent Connects to Tracetest"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml")," file includes the ",(0,r.kt)("a",{parentName:"p",href:"/concepts/agent"},"Tracetest Agent")," image, which is going to fetch traces from the Jaeger all-in-one instance and send them to Tracetest."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'version: "3"\n\nservices:\n  tracetest-agent:\n    image: kubeshop/tracetest-agent:latest\n    environment:\n      TRACETEST_DEV: ${TRACETEST_DEV}\n      TRACETEST_API_KEY: ${TRACETEST_API_KEY}\n')),(0,r.kt)("p",null,"Do not forget to set the ",(0,r.kt)("inlineCode",{parentName:"p"},"TRACETEST_API_KEY")," environment variable in the ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file to your Tracetest Agent. The API key available on the ",(0,r.kt)("inlineCode",{parentName:"p"},"Settings > Agent")," page of your environment as you can see ",(0,r.kt)("a",{parentName:"p",href:"/configuration/agent"},"here"),"."),(0,r.kt)("p",null,"Configure Tracetest Agent to connect to the Jaeger instance running in Docker."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title=tracetest-datastore.yaml",title:"tracetest-datastore.yaml"},"---\ntype: DataStore\nspec:\n  id: current\n  name: jaeger\n  type: jaeger\n  jaeger:\n    endpoint: jaeger:16685\n    tls:\n      insecure: true\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tracetest apply datastore -f ./tracetest-datastore.yaml\n")),(0,r.kt)("h2",{id:"run-the-pokeshop-demo-app-and-the-tracetest-agent"},"Run the Pokeshop Demo App and the Tracetest Agent"),(0,r.kt)("p",null,"To start the full setup, run the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose up -d\n")),(0,r.kt)("p",null,"This will start the Pokeshop Demo HTTP API on ",(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:8081/"),"."),(0,r.kt)("h2",{id:"run-the-k6-script"},"Run the k6 Script"),(0,r.kt)("p",null,"Having the full setup ready, the final step is to run the k6 script. To do that, run the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"XK6_TRACETEST_API_TOKEN=<your-environment-token> ./k6 run ./import-pokemon.js -o xk6-tracetest\ncontext menu\n\n\n          /\\      |\u203e\u203e| /\u203e\u203e/   /\u203e\u203e/\n     /\\  /  \\     |  |/  /   /  /\n    /  \\/    \\    |     (   /   \u203e\u203e\\\n   /          \\   |  |\\  \\ |  (\u203e)  |\n  / __________ \\  |__| \\__\\ \\_____/ .io\n\n  execution: local\n     script: ./import-pokemon.js\n     output: xk6-tracetest-output (TestRunID: 38055)\n\n  scenarios: (100.00%) 1 scenario, 1 max VUs, 35s max duration (incl. graceful stop):\n           * default: 1 looping VUs for 5s (gracefulStop: 30s)\n\n[TotalRuns=6, SuccessfulRus=1, FailedRuns=5]\n[FAILED]\n[Request=GET - http://localhost:8081/pokemon/import, TraceID=dc0718bcecceeec731b343235eb9c15a, RunState=FINISHED FailingSpecs=true, TracetestURL= https://app.tracetest.io/organizations/ttorg_ced62e34638d965e/environments/ttenv_807d0129a10be776/test/kc_MgKoVR/run/11]\n[Request=POST - http://localhost:8081/pokemon/import, TraceID=dc0718fe83cfeec7315daf10d212d351, RunState=FINISHED FailingSpecs=true, TracetestURL= https://app.tracetest.io/organizations/ttorg_ced62e34638d965e/environments/ttenv_807d0129a10be776/test/kc_MgKoVR/run/4]\n[Request=POST - http://localhost:8081/pokemon/import, TraceID=dc0718a8f4ceeec731e47f13762e61b8, RunState=FINISHED FailingSpecs=true, TracetestURL= https://app.tracetest.io/organizations/ttorg_ced62e34638d965e/environments/ttenv_807d0129a10be776/test/kc_MgKoVR/run/8]\n[Request=POST - http://localhost:8081/pokemon/import, TraceID=dc0718bcecceeec731b343235eb9c15a, RunState=FINISHED FailingSpecs=true, TracetestURL= https://app.tracetest.io/organizations/ttorg_ced62e34638d965e/environments/ttenv_807d0129a10be776/test/kc_MgKoVR/run/9]\n[Request=POST - http://localhost:8081/pokemon/import, TraceID=dc071893fcceeec731148270c6671a1e, RunState=FINISHED FailingSpecs=true, TracetestURL= https://app.tracetest.io/organizations/ttorg_ced62e34638d965e/environments/ttenv_807d0129a10be776/test/kc_MgKoVR/run/6]\n[SUCCESSFUL]\n[Request=POST - http://localhost:8081/pokemon/import, TraceID=dc0718cee4ceeec731f3f414bf3a2a16, RunState=FINISHED FailingSpecs=false, TracetestURL= https://app.tracetest.io/organizations/ttorg_ced62e34638d965e/environments/ttenv_807d0129a10be776/test/kc_MgKoVR/run/3]\n\nrunning (05.0s), 0/1 VUs, 5 complete and 0 interrupted iterations\ndefault \u2713 [======================================] 1 VUs  5s\n")),(0,r.kt)("h2",{id:"whats-next"},"What's Next?"),(0,r.kt)("p",null,"After running the initial set of tests, you can click the run link for any of them, update the assertions and run the scripts once more. This flow enables complete a trace-based TDD flow."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"assertions",src:n(2430).Z,width:"1561",height:"887"})),(0,r.kt)("h2",{id:"learn-more"},"Learn More"),(0,r.kt)("p",null,"Please visit our ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/kubeshop/tracetest/tree/main/examples"},"examples in GitHub")," and join our ",(0,r.kt)("a",{parentName:"p",href:"https://dub.sh/tracetest-community"},"Slack Community")," for more info!"))}d.isMDXComponent=!0},2430:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/tracetest-cloud-k6-76806c5b28db5bdb261075199c4d8822.gif"}}]);