"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[7572],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>g});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(r),m=a,g=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return r?n.createElement(g,o(o({ref:t},u),{},{components:r})):n.createElement(g,o({ref:t},u))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},89933:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=r(87462),a=(r(67294),r(3905));const i={id:"configuring-your-cli",title:"Configuring your CLI",description:"Configure the Tracetest CLI. The CLI is used for creating tests and executing them each time a change is made in the system.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},o=void 0,s={unversionedId:"cli/configuring-your-cli",id:"cli/configuring-your-cli",title:"Configuring your CLI",description:"Configure the Tracetest CLI. The CLI is used for creating tests and executing them each time a change is made in the system.",source:"@site/docs/cli/configuring-your-cli.mdx",sourceDirName:"cli",slug:"/cli/configuring-your-cli",permalink:"/cli/configuring-your-cli",draft:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/cli/configuring-your-cli.mdx",tags:[],version:"current",frontMatter:{id:"configuring-your-cli",title:"Configuring your CLI",description:"Configure the Tracetest CLI. The CLI is used for creating tests and executing them each time a change is made in the system.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},sidebar:"tutorialSidebar",previous:{title:"CLI Installation Reference",permalink:"/cli/cli-installation-reference"},next:{title:"Defining Data Stores as Text Files",permalink:"/cli/creating-data-stores"}},l={},c=[{value:"Available Commands",id:"available-commands",level:2},{value:"Configure",id:"configure",level:3},{value:"Test List",id:"test-list",level:3},{value:"Run a Test",id:"run-a-test",level:3},{value:"Running Tracetest CLI from Docker",id:"running-tracetest-cli-from-docker",level:3}],u={toc:c},p="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Our web interface makes it easier to visualize your traces and add assertions, but sometimes a CLI is needed for automation. The CLI was developed for users creating tests and executing them each time a change is made in the system, so Tracetest can detect regressions and check your Service Level Objectives (SLOs)."),(0,a.kt)("h2",{id:"available-commands"},"Available Commands"),(0,a.kt)("p",null,"Here is a list of all available commands and how to use them:"),(0,a.kt)("h3",{id:"configure"},"Configure"),(0,a.kt)("p",null,"Configure your CLI to connect to your Tracetest server."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"How to Use"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"tracetest configure\n")),(0,a.kt)("p",null,"If you want to set values without having to answer questions from a prompt, you can provide the flag ",(0,a.kt)("inlineCode",{parentName:"p"},"--server-url")," to define the server endpoint."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"tracetest configure --server-url http://my-tracetest-server:11633\n")),(0,a.kt)("h3",{id:"test-list"},"Test List"),(0,a.kt)("p",null,"Allows you to list all tests."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"How to Use"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"tracetest list test\n")),(0,a.kt)("h3",{id:"run-a-test"},"Run a Test"),(0,a.kt)("p",null,"Allows you to run a test by referencing a ",(0,a.kt)("a",{parentName:"p",href:"/cli/creating-tests"},"test definition file"),"."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Note: If the definition file contains the field ",(0,a.kt)("inlineCode",{parentName:"p"},"id"),", this command will not create a new test. Instead, it will update the test with that ID. If that test doesn't exist, a new one will be created with that ID on the server.")),(0,a.kt)("p",null,"Every time the test is run, changes are detected and, if any change is introduced, we use Tractest's ",(0,a.kt)("a",{parentName:"p",href:"/concepts/versioning"},"versioning")," mechanism to ensure that it will not cause problems with previous test runs."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"How to Use"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"tracetest run test --file <file-path>\n")),(0,a.kt)("h3",{id:"running-tracetest-cli-from-docker"},"Running Tracetest CLI from Docker"),(0,a.kt)("p",null,"There are times when it is easier to directly execute the Tracetest CLI from a Docker image rather than installing the CLI on your local machine. This can be convenient when you wish to execute the CLI in a CI/CD environment."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"How to Use"),":"),(0,a.kt)("p",null,"Use the command below, substituting the following placeholders:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"your-tracetest-server-url")," - The URL to the running Tracetest server you wish to execute the test on. Example: ",(0,a.kt)("inlineCode",{parentName:"li"},"http://localhost:11633/")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"file-path")," - The path to the saved Tracetest test. Example: ",(0,a.kt)("inlineCode",{parentName:"li"},"./mytest.yaml"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:"wordWrap=true",wordWrap:"true"},"docker run --rm -it -v$(pwd):$(pwd) -w $(pwd) --network host --entrypoint tracetest kubeshop/tracetest:latest -s <your-tracetest-server-url> run test --file <file-path>\n")))}d.isMDXComponent=!0}}]);