"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[695],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=l(n),u=o,h=d["".concat(p,".").concat(u)]||d[u]||m[u]||r;return n?a.createElement(h,s(s({ref:t},c),{},{components:n})):a.createElement(h,s({ref:t},c))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:o,s[1]=i;for(var l=2;l<r;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},77735:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),o=(n(67294),n(3905));const r={id:"typescript",title:"Programmatically triggered trace-based tests using Tracetest and Typescript",description:"Quickstart on how to use the Tracetest NPM @tracetest/client Typescript package to Programatically trigger Trace-Based Tests.",hide_table_of_contents:!1,keywords:["tracetest","trace-based testing","observability","distributed tracing","testing","typescript","programmatically"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},s=void 0,i={unversionedId:"tools-and-integrations/typescript",id:"tools-and-integrations/typescript",title:"Programmatically triggered trace-based tests using Tracetest and Typescript",description:"Quickstart on how to use the Tracetest NPM @tracetest/client Typescript package to Programatically trigger Trace-Based Tests.",source:"@site/docs/tools-and-integrations/typescript.mdx",sourceDirName:"tools-and-integrations",slug:"/tools-and-integrations/typescript",permalink:"/tools-and-integrations/typescript",draft:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/tools-and-integrations/typescript.mdx",tags:[],version:"current",frontMatter:{id:"typescript",title:"Programmatically triggered trace-based tests using Tracetest and Typescript",description:"Quickstart on how to use the Tracetest NPM @tracetest/client Typescript package to Programatically trigger Trace-Based Tests.",hide_table_of_contents:!1,keywords:["tracetest","trace-based testing","observability","distributed tracing","testing","typescript","programmatically"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},sidebar:"examplesTutorialsSidebar",previous:{title:"Trace-Based End to End Testing with Playwright and Tracetest",permalink:"/tools-and-integrations/playwright"},next:{title:"Running Tracetest with Keptn",permalink:"/tools-and-integrations/keptn"}},p={},l=[{value:"Why is this important?",id:"why-is-this-important",level:2},{value:"The <code>@tracetest/client</code> NPM Package",id:"the-tracetestclient-npm-package",level:2},{value:"How It Works",id:"how-it-works",level:2},{value:"Today You&#39;ll Learn How to integrate Trace-Based Tests with your Typescript Code",id:"today-youll-learn-how-to-integrate-trace-based-tests-with-your-typescript-code",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Run This Quckstart Example",id:"run-this-quckstart-example",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"Installing the <code>@tracetest/client</code> NPM Package",id:"installing-the-tracetestclient-npm-package",level:2},{value:"Tracetest Test Definitions",id:"tracetest-test-definitions",level:2},{value:"Creating the Typescript Script",id:"creating-the-typescript-script",level:2},{value:"Running the Full Example",id:"running-the-full-example",level:2},{value:"Finding the Results",id:"finding-the-results",level:2},{value:"What&#39;s Next?",id:"whats-next",level:2},{value:"Learn More",id:"learn-more",level:2}],c={toc:l},d="wrapper";function m(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("a",{parentName:"p",href:"https://github.com/kubeshop/tracetest/tree/main/examples/quick-start-typescript"},"Check out the source code on GitHub here."))),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://app.tracetest.io/"},"Tracetest")," is a testing tool based on ",(0,o.kt)("a",{parentName:"p",href:"https://opentelemetry.io/"},"OpenTelemetry")," that allows you to test your distributed application. It allows you to use data from distributed traces generated by OpenTelemetry to validate and assert if your application has the desired behavior defined by your test definitions."),(0,o.kt)("p",null,"JavaScript/TypeScript is today the most popular language for web development, and it is also the most popular language for writing tests and automation scripts."),(0,o.kt)("h2",{id:"why-is-this-important"},"Why is this important?"),(0,o.kt)("p",null,"When working with testing tools, the most important thing is to be able to integrate them into your existing workflow and tooling. This is why we have created the ",(0,o.kt)("inlineCode",{parentName:"p"},"@tracetest/client")," NPM package, which allows you to use the Tracetest platform to run trace-based tests from your existing JavaScript/TypeScript code.\nEnabling you to run tests at any point in your code, and not only at the end of the test run, allows you to use trace-based testing as a tool to help you develop your application."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Check out the hands-on tutorial on YouTube!"),(0,o.kt)("iframe",{width:"100%",height:"250",src:"https://www.youtube.com/embed/BOMjkiwyRzc",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0})),(0,o.kt)("h2",{id:"the-tracetestclient-npm-package"},"The ",(0,o.kt)("inlineCode",{parentName:"h2"},"@tracetest/client")," NPM Package"),(0,o.kt)("p",null,"With the ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@tracetest/client"},(0,o.kt)("inlineCode",{parentName:"a"},"@tracetest/client")," NPM Package"),", you will unlock the power of OpenTelemetry that allows you to run deeper testing based on the traces and spans generated by each of the checkpoints that you define within your services."),(0,o.kt)("h2",{id:"how-it-works"},"How It Works"),(0,o.kt)("p",null,"The following is a high-level sequence diagram of how the Typescript script, the ",(0,o.kt)("inlineCode",{parentName:"p"},"@tracetest/client")," package, and Tracetest interact."),(0,o.kt)("mermaid",{value:"sequenceDiagram\n  Typescript->>+Typescript: Execute tests\n  Typescript->>+@tracetest/client: Createst instance\n  @tracetest/client--\x3e>-Typescript: Ok\n  Typescript->>+Typescript: Run pre-steps\n  Typescript->>+@tracetest/client: Creates test\n  @tracetest/client--\x3e>-Typescript: Ok\n  Typescript->>+@tracetest/client: Runs test\n  @tracetest/client--\x3e>-Typescript: Ok\n  Typescript->>@tracetest/client: Waits for results and shows the summary"}),(0,o.kt)("h2",{id:"today-youll-learn-how-to-integrate-trace-based-tests-with-your-typescript-code"},"Today You'll Learn How to integrate Trace-Based Tests with your Typescript Code"),(0,o.kt)("p",null,"This is a simple quick-start guide on how to use the Tracetest ",(0,o.kt)("inlineCode",{parentName:"p"},"@tracetest/client")," NPM package to enhance your Typescript toolkit with trace-based testing. The infrastructure will use the Pokeshop Demo as a testing ground, triggering requests against it and generating telemetry data."),(0,o.kt)("h2",{id:"requirements"},"Requirements"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Tracetest Account"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Sign up to ",(0,o.kt)("a",{parentName:"li",href:"https://app.tracetest.io"},(0,o.kt)("inlineCode",{parentName:"a"},"app.tracetest.io"))," or follow the ",(0,o.kt)("a",{parentName:"li",href:"/getting-started/installation"},"get started")," docs."),(0,o.kt)("li",{parentName:"ul"},"Create an ",(0,o.kt)("a",{parentName:"li",href:"/concepts/environments"},"environment"),"."),(0,o.kt)("li",{parentName:"ul"},"Create an ",(0,o.kt)("a",{parentName:"li",href:"/concepts/environment-tokens"},"environment token"),"."),(0,o.kt)("li",{parentName:"ul"},"Have access to the environment's ",(0,o.kt)("a",{parentName:"li",href:"/configuration/agent"},"agent API key"),".")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Docker"),": Have ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/get-docker/"},"Docker")," and ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/compose/install/"},"Docker Compose")," installed on your machine."),(0,o.kt)("h2",{id:"run-this-quckstart-example"},"Run This Quckstart Example"),(0,o.kt)("p",null,"The example below is provided as part of the Tracetest project. You can download and run the example by following these steps:"),(0,o.kt)("p",null,"Clone the Tracetest project and go to the TypeScript Quickstart:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/kubeshop/tracetest\ncd tracetest/examples/quick-start-typescript\n")),(0,o.kt)("p",null,"Follow these instructions to run the included demo app and TypeScript example:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Copy the ",(0,o.kt)("inlineCode",{parentName:"li"},".env.template")," file to ",(0,o.kt)("inlineCode",{parentName:"li"},".env"),"."),(0,o.kt)("li",{parentName:"ol"},"Log into the ",(0,o.kt)("a",{parentName:"li",href:"https://app.tracetest.io/"},"Tracetest app"),"."),(0,o.kt)("li",{parentName:"ol"},"This example is configured to use the OpenTelemetry Collector. Ensure the environment you will be utilizing to run this example is also configured to use the OpenTelemetry Tracing Backend by clicking on Settings, Tracing Backend, OpenTelemetry, Save."),(0,o.kt)("li",{parentName:"ol"},"Fill out the ",(0,o.kt)("a",{parentName:"li",href:"https://docs.tracetest.io/concepts/environment-tokens"},"token")," and ",(0,o.kt)("a",{parentName:"li",href:"https://docs.tracetest.io/concepts/agent"},"agent API key")," details by editing your .env file. You can find these values in the Settings area for your environment."),(0,o.kt)("li",{parentName:"ol"},"Run ",(0,o.kt)("inlineCode",{parentName:"li"},"docker compose up -d"),"."),(0,o.kt)("li",{parentName:"ol"},"Look for the ",(0,o.kt)("inlineCode",{parentName:"li"},"tracetest-client")," service in Docker and click on it to view the logs. It will show the results from the trace-based tests that are triggered from the index.ts Typescript file."),(0,o.kt)("li",{parentName:"ol"},"Follow the links in the log to to view the test runs programmatically created by your TypeScript test script.")),(0,o.kt)("p",null,"Follow along with the sections below for an in detail breakdown of what the example you just ran did and how it works."),(0,o.kt)("h2",{id:"project-structure"},"Project Structure"),(0,o.kt)("p",null,"The quick start TypeScript project is built with Docker Compose."),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"/live-examples/pokeshop/overview"},"Pokeshop Demo App")," is a complete example of a distributed application using different back-end and front-end services. We will be launching it and running tests against it as part of this example."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml")," file in the root directory of the quick start runs the Pokeshop Demo app, the OpenTelemetry Collector setup, and the ",(0,o.kt)("a",{parentName:"p",href:"/concepts/agent"},"Tracetest Agent"),"."),(0,o.kt)("p",null,"The TypeScript quick start has two primary files: a Typescript file ",(0,o.kt)("inlineCode",{parentName:"p"},"definitions.ts")," that defines two Tracetest tests, and a Typescript file 'index.ts' that imports these test definitions and uses the \"@tracetest/client\" NPM package to run them multiple times. "),(0,o.kt)("p",null,"We will show you how to install the NPM package and use these two TypeScript files to programmatically run Tracetest tests."),(0,o.kt)("h2",{id:"installing-the-tracetestclient-npm-package"},"Installing the ",(0,o.kt)("inlineCode",{parentName:"h2"},"@tracetest/client")," NPM Package"),(0,o.kt)("p",null,"The first step when using the TypeScript NPM package is to install the ",(0,o.kt)("inlineCode",{parentName:"p"},"@tracetest/client")," NPM Package. It is as easy as running the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i @tracetest/client\n")),(0,o.kt)("p",null,"Once you have installed the ",(0,o.kt)("inlineCode",{parentName:"p"},"@tracetest/client")," package, you can import it and start making use of it as any other library to trigger trace-based tests and run checks against the resulting telemetry data."),(0,o.kt)("h2",{id:"tracetest-test-definitions"},"Tracetest Test Definitions"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"definitions.ts")," file contains the JSON version of the test definitions that will be used to run the tests. It uses the HTTP trigger to execute requests against the Pokeshop Demo."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import { TestResource } from "@tracetest/client/dist/modules/openapi-client";\n\nexport const importDefinition: TestResource = {\n  type: "Test",\n  spec: {\n    id: "99TOHzpSR",\n    name: "Typescript: Import a Pokemon",\n    trigger: {\n      type: "http",\n      httpRequest: {\n        method: "POST",\n        url: "${var:BASE_URL}/import",\n        body: \'{"id": ${var:POKEMON_ID}}\',\n        headers: [\n          {\n            key: "Content-Type",\n            value: "application/json",\n          },\n        ],\n      },\n    },\n    specs: [\n      {\n        selector: \'span[tracetest.span.type="general" name = "validate request"] span[tracetest.span.type="http"]\',\n        name: "All HTTP Spans: Status  code is 200",\n        assertions: ["attr:http.status_code = 200"],\n      },\n      {\n        selector: \'span[tracetest.span.type="http" name="GET" http.method="GET"]\',\n        assertions: [\'attr:http.route = "/api/v2/pokemon/${var:POKEMON_ID}"\'],\n      },\n      {\n        selector: \'span[tracetest.span.type="database"]\',\n        name: "All Database Spans: Processing time is less than 1s",\n        assertions: ["attr:tracetest.span.duration < 1s"],\n      },\n    ],\n    outputs: [\n      {\n        name: "DATABASE_POKEMON_ID",\n        selector:\n          \'span[tracetest.span.type="database" name="create pokeshop.pokemon" db.system="postgres" db.name="pokeshop" db.user="ashketchum" db.operation="create" db.sql.table="pokemon"]\',\n        value: "attr:db.result | json_path \'$.id\'",\n      },\n    ],\n  },\n};\n\nexport const deleteDefinition: TestResource = {\n  type: "Test",\n  spec: {\n    id: "C2gwdktIR",\n    name: "Typescript: Delete a Pokemon",\n    trigger: {\n      type: "http",\n      httpRequest: {\n        method: "DELETE",\n        url: "${var:BASE_URL}/${var:POKEMON_ID}",\n        headers: [\n          {\n            key: "Content-Type",\n            value: "application/json",\n          },\n        ],\n      },\n    },\n    specs: [\n      {\n        selector:\n          \'span[tracetest.span.type="database" db.system="redis" db.operation="del" db.redis.database_index="0"]\',\n        assertions: [\'attr:db.payload = \\\'{"key":"pokemon-${var:POKEMON_ID}"}\\\'\'],\n      },\n      {\n        selector:\n          \'span[tracetest.span.type="database" name="delete pokeshop.pokemon" db.system="postgres" db.name="pokeshop" db.user="ashketchum" db.operation="delete" db.sql.table="pokemon"]\',\n        assertions: ["attr:db.result = 1"],\n      },\n      {\n        selector: \'span[tracetest.span.type="database"]\',\n        name: "All Database Spans: Processing time is less than 100ms",\n        assertions: ["attr:tracetest.span.duration < 100ms"],\n      },\n    ],\n  },\n};\n')),(0,o.kt)("h2",{id:"creating-the-typescript-script"},"Creating the Typescript Script"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"index.ts")," file contains the Typescript script that will be used to trigger requests against the Pokeshop Demo and run trace-based tests. The steps executed by this script are the following:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Import the ",(0,o.kt)("inlineCode",{parentName:"li"},"@tracetest/client")," package."),(0,o.kt)("li",{parentName:"ol"},"Create a new ",(0,o.kt)("inlineCode",{parentName:"li"},"Tracetest")," instance."),(0,o.kt)("li",{parentName:"ol"},"Get the last imported Pokemon number from the ",(0,o.kt)("inlineCode",{parentName:"li"},"GET /pokemon")," endpoint using ",(0,o.kt)("inlineCode",{parentName:"li"},"fetch"),"."),(0,o.kt)("li",{parentName:"ol"},"Import the following 5 Pokemon after the last number by triggering a trace-based test to the ",(0,o.kt)("inlineCode",{parentName:"li"},"POST /import")," endpoint."),(0,o.kt)("li",{parentName:"ol"},"From each test output, get the ",(0,o.kt)("inlineCode",{parentName:"li"},"DATABASE_POKEMON_ID")," value and add it to a list."),(0,o.kt)("li",{parentName:"ol"},"Delete the imported Pokemon by triggering a trace-based test to the ",(0,o.kt)("inlineCode",{parentName:"li"},"DELETE /:id")," endpoint.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import Tracetest from "@tracetest/client";\nimport { config } from "dotenv";\nimport { PokemonList } from "./types";\nimport { deleteDefinition, importDefinition } from "./definitions";\n\nconfig();\n\nconst { TRACETEST_API_TOKEN = "", POKESHOP_DEMO_URL = "http://api:8081" } = process.env;\n\nconst baseUrl = `${POKESHOP_DEMO_URL}/pokemon`;\n\nconst main = async () => {\n  const tracetest = await Tracetest(TRACETEST_API_TOKEN);\n\n  const getLastPokemonId = async (): Promise<number> => {\n    const response = await fetch(baseUrl);\n    const list = (await response.json()) as PokemonList;\n\n    return list.items.length + 1;\n  };\n\n  // get the initial pokemon from the API\n  const pokemonId = (await getLastPokemonId()) + 1;\n\n  const getVariables = (id: string) => [\n    { key: "POKEMON_ID", value: id },\n    { key: "BASE_URL", value: baseUrl },\n  ];\n\n  const importedPokemonList: string[] = [];\n\n  const importPokemons = async (startId: number) => {\n    const test = await tracetest.newTest(importDefinition);\n    // imports all pokemons\n    await Promise.all(\n      new Array(5).fill(0).map(async (_, index) => {\n        console.log(`\u2139 Importing pokemon ${startId + index + 1}`);\n        const run = await tracetest.runTest(test, { variables: getVariables(`${startId + index + 1}`) });\n        const updatedRun = await run.wait();\n        const pokemonId = updatedRun.outputs?.find((output) => output.name === "DATABASE_POKEMON_ID")?.value || "";\n\n        console.log(`\u2139 Adding pokemon ${pokemonId} to the list, ${updatedRun}`);\n        importedPokemonList.push(pokemonId);\n      })\n    );\n  };\n\n  const deletePokemons = async () => {\n    const test = await tracetest.newTest(deleteDefinition);\n    // deletes all pokemons\n    await Promise.all(\n      importedPokemonList.map(async (pokemonId) => {\n        console.log(`\u2139 Deleting pokemon ${pokemonId}`);\n        return tracetest.runTest(test, { variables: getVariables(pokemonId) });\n      })\n    );\n  };\n\n  await importPokemons(pokemonId);\n  console.log(await tracetest.getSummary());\n\n  await deletePokemons();\n  console.log(await tracetest.getSummary());\n};\n\nmain();\n')),(0,o.kt)("h2",{id:"running-the-full-example"},"Running the Full Example"),(0,o.kt)("p",null,"To start the full setup, run the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker compose up -d\n")),(0,o.kt)("h2",{id:"finding-the-results"},"Finding the Results"),(0,o.kt)("p",null,"The output from the TypeScript script should be visible in the log for the ",(0,o.kt)("inlineCode",{parentName:"p"},"tracetest-client")," service in Docker Compose. This log will show links to Tracetest for each of the test runs invoked by ",(0,o.kt)("inlineCode",{parentName:"p"},"index.ts"),". Click a link to launch Tracetest and view the test result."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"2024-01-26 10:54:44 \u2139 Importing pokemon 3\n2024-01-26 10:54:44 \u2139 Importing pokemon 4\n2024-01-26 10:54:44 \u2139 Importing pokemon 5\n2024-01-26 10:54:44 \u2139 Importing pokemon 6\n2024-01-26 10:54:44 \u2139 Importing pokemon 7\n2024-01-26 10:54:56 \u2139 Adding pokemon 1 to the list\n2024-01-26 10:54:58 \u2139 Adding pokemon 2 to the list\n2024-01-26 10:54:59 \u2139 Adding pokemon 3 to the list\n2024-01-26 10:54:59 \u2139 Adding pokemon 5 to the list\n2024-01-26 10:54:59 \u2139 Adding pokemon 4 to the list\n2024-01-26 10:54:59 \n2024-01-26 10:54:59 Successful: 5\n2024-01-26 10:54:59 Failed: 0\n2024-01-26 10:54:59 \n2024-01-26 10:54:59 [\u2714\ufe0f Typescript: Import a Pokemon] #1 - https://app-stage.tracetest.io/organizations/ttorg_08eb62e60d1db492/environments/ttenv_70f346fe8ddba633/test/99TOHzpSR/run/1\n2024-01-26 10:54:59 [\u2714\ufe0f Typescript: Import a Pokemon] #2 - https://app-stage.tracetest.io/organizations/ttorg_08eb62e60d1db492/environments/ttenv_70f346fe8ddba633/test/99TOHzpSR/run/2\n2024-01-26 10:54:59 [\u2714\ufe0f Typescript: Import a Pokemon] #3 - https://app-stage.tracetest.io/organizations/ttorg_08eb62e60d1db492/environments/ttenv_70f346fe8ddba633/test/99TOHzpSR/run/3\n2024-01-26 10:54:59 [\u2714\ufe0f Typescript: Import a Pokemon] #4 - https://app-stage.tracetest.io/organizations/ttorg_08eb62e60d1db492/environments/ttenv_70f346fe8ddba633/test/99TOHzpSR/run/4\n2024-01-26 10:54:59 [\u2714\ufe0f Typescript: Import a Pokemon] #5 - https://app-stage.tracetest.io/organizations/ttorg_08eb62e60d1db492/environments/ttenv_70f346fe8ddba633/test/99TOHzpSR/run/5\n2024-01-26 10:54:59 \n2024-01-26 10:54:59 \u2139 Deleting pokemon 1\n2024-01-26 10:54:59 \u2139 Deleting pokemon 2\n2024-01-26 10:54:59 \u2139 Deleting pokemon 3\n2024-01-26 10:54:59 \u2139 Deleting pokemon 5\n2024-01-26 10:54:59 \u2139 Deleting pokemon 4\n2024-01-26 10:55:14 \n2024-01-26 10:55:14 Successful: 10\n2024-01-26 10:55:14 Failed: 0\n2024-01-26 10:55:14 \n2024-01-26 10:55:14 [\u2714\ufe0f Typescript: Import a Pokemon] #1 - https://app-stage.tracetest.io/organizations/ttorg_08eb62e60d1db492/environments/ttenv_70f346fe8ddba633/test/99TOHzpSR/run/1\n2024-01-26 10:55:14 [\u2714\ufe0f Typescript: Import a Pokemon] #2 - https://app-stage.tracetest.io/organizations/ttorg_08eb62e60d1db492/environments/ttenv_70f346fe8ddba633/test/99TOHzpSR/run/2\n2024-01-26 10:55:14 [\u2714\ufe0f Typescript: Import a Pokemon] #3 - https://app-stage.tracetest.io/organizations/ttorg_08eb62e60d1db492/environments/ttenv_70f346fe8ddba633/test/99TOHzpSR/run/3\n2024-01-26 10:55:14 [\u2714\ufe0f Typescript: Import a Pokemon] #4 - https://app-stage.tracetest.io/organizations/ttorg_08eb62e60d1db492/environments/ttenv_70f346fe8ddba633/test/99TOHzpSR/run/4\n2024-01-26 10:55:14 [\u2714\ufe0f Typescript: Import a Pokemon] #5 - https://app-stage.tracetest.io/organizations/ttorg_08eb62e60d1db492/environments/ttenv_70f346fe8ddba633/test/99TOHzpSR/run/5\n2024-01-26 10:55:14 [\u2714\ufe0f Typescript: Delete a Pokemon] #1 - https://app-stage.tracetest.io/organizations/ttorg_08eb62e60d1db492/environments/ttenv_70f346fe8ddba633/test/C2gwdktIR/run/1\n2024-01-26 10:55:14 [\u2714\ufe0f Typescript: Delete a Pokemon] #2 - https://app-stage.tracetest.io/organizations/ttorg_08eb62e60d1db492/environments/ttenv_70f346fe8ddba633/test/C2gwdktIR/run/2\n2024-01-26 10:55:14 [\u2714\ufe0f Typescript: Delete a Pokemon] #4 - https://app-stage.tracetest.io/organizations/ttorg_08eb62e60d1db492/environments/ttenv_70f346fe8ddba633/test/C2gwdktIR/run/4\n2024-01-26 10:55:14 [\u2714\ufe0f Typescript: Delete a Pokemon] #3 - https://app-stage.tracetest.io/organizations/ttorg_08eb62e60d1db492/environments/ttenv_70f346fe8ddba633/test/C2gwdktIR/run/3\n2024-01-26 10:55:14 [\u2714\ufe0f Typescript: Delete a Pokemon] #5 - https://app-stage.tracetest.io/organizations/ttorg_08eb62e60d1db492/environments/ttenv_70f346fe8ddba633/test/C2gwdktIR/run/5\n")),(0,o.kt)("h2",{id:"whats-next"},"What's Next?"),(0,o.kt)("p",null,"After running the initial set of tests, you can click the run link for any of them, update the assertions, and run the scripts once more. This flow enables complete a trace-based TDD flow."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"assertions",src:n(66878).Z,width:"2880",height:"1658"})),(0,o.kt)("h2",{id:"learn-more"},"Learn More"),(0,o.kt)("p",null,"Please visit our ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/kubeshop/tracetest/tree/main/examples"},"examples in GitHub")," and join our ",(0,o.kt)("a",{parentName:"p",href:"https://dub.sh/tracetest-community"},"Slack Community")," for more info!"))}m.isMDXComponent=!0},66878:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/tracetest-cloud-typescript-d912ca53474f3f16eb8e12d19160b5b7.gif"}}]);