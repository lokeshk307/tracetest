"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[4940],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>u});var s=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,s,a=function(e,t){if(null==e)return{};var n,s,a={},r=Object.keys(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=s.createContext({}),c=function(e){var t=s.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=c(e.components);return s.createElement(p.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},m=s.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,u=d["".concat(p,".").concat(m)]||d[m]||h[m]||r;return n?s.createElement(u,o(o({ref:t},l),{},{components:n})):s.createElement(u,o({ref:t},l))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:a,o[1]=i;for(var c=2;c<r;c++)o[c]=n[c];return s.createElement.apply(null,o)}return s.createElement.apply(null,n)}m.displayName="MDXCreateElement"},13212:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var s=n(87462),a=(n(67294),n(3905));const r={id:"cypress",title:"Trace-Based End to End Testing with Cypress and Tracetest",description:"Tracetest can be integrated and used with Cypress. This guide shows running Tracetest tests from Cypress.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing","cypress","end to end testing","end-to-end testing","integration testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},o=void 0,i={unversionedId:"tools-and-integrations/cypress",id:"tools-and-integrations/cypress",title:"Trace-Based End to End Testing with Cypress and Tracetest",description:"Tracetest can be integrated and used with Cypress. This guide shows running Tracetest tests from Cypress.",source:"@site/docs/tools-and-integrations/cypress.mdx",sourceDirName:"tools-and-integrations",slug:"/tools-and-integrations/cypress",permalink:"/tools-and-integrations/cypress",draft:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/tools-and-integrations/cypress.mdx",tags:[],version:"current",frontMatter:{id:"cypress",title:"Trace-Based End to End Testing with Cypress and Tracetest",description:"Tracetest can be integrated and used with Cypress. This guide shows running Tracetest tests from Cypress.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing","cypress","end to end testing","end-to-end testing","integration testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},sidebar:"examplesTutorialsSidebar",previous:{title:"Tools and Integrations",permalink:"/tools-and-integrations/overview"},next:{title:"Trace-Based End to End Testing with Playwright and Tracetest",permalink:"/tools-and-integrations/playwright"}},p={},c=[{value:"Why is this important?",id:"why-is-this-important",level:2},{value:"How It Works",id:"how-it-works",level:2},{value:"The <code>@tracetest/cypress</code> npm Package",id:"the-tracetestcypress-npm-package",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"Pokeshop Demo App",id:"pokeshop-demo-app",level:3},{value:"The Cypress Setup",id:"the-cypress-setup",level:2},{value:"The <code>home.cy.ts</code> Test Script",id:"the-homecyts-test-script",level:3},{value:"Tracetest Library Setup",id:"tracetest-library-setup",level:3},{value:"Setting the Environment Variables",id:"setting-the-environment-variables",level:3},{value:"Starting the Pokeshop Demo App",id:"starting-the-pokeshop-demo-app",level:3},{value:"Running the Tests",id:"running-the-tests",level:3},{value:"Using the Cypress CLI",id:"using-the-cypress-cli",level:4},{value:"Using the Cypress UI",id:"using-the-cypress-ui",level:4}],l={toc:c},d="wrapper";function h(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,s.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://tracetest.io/"},"Tracetest")," is a testing tool based on ",(0,a.kt)("a",{parentName:"p",href:"https://opentelemetry.io/"},"OpenTelemetry")," that permits you to test your distributed application. It allows you to use the trace data generated by your OpenTelemetry tools to check and assert if your application has the desired behavior defined by your test definitions."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.cypress.io/"},"Cypress")," is a JavaScript end-to-end testing framework. It is used for testing web applications by simulating user interactions within the browser. Cypress provides a fast, reliable, and easy-to-use testing environment for developers."),(0,a.kt)("h2",{id:"why-is-this-important"},"Why is this important?"),(0,a.kt)("p",null,"Cypress is currently one of the top end to end testing frameworks, it is a great tool in its own right that allows you to replicate most of the production challenges you might encounter by allowing developers to test the system from the user perspective. But, as with all of the tools that only test the UI portion application, you can only run validations against what the user would see while going through the flows."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Check out the hands-on tutorial on YouTube!"),(0,a.kt)("iframe",{width:"100%",height:"250",src:"https://www.youtube.com/embed/yDXoa8znTQQ",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0})),(0,a.kt)("h2",{id:"how-it-works"},"How It Works"),(0,a.kt)("p",null,"The following is a high-level sequence diagram of how Cypress and Tracetest interact with the different pieces of the system."),(0,a.kt)("mermaid",{value:"sequenceDiagram\n  Cypress->>+Scripts: Execute tests\n  Scripts->>+@tracetest/cypress: Createst instance\n  @tracetest/cypress--\x3e>-Scripts: Ok\n  Scripts->>+Scripts: Visits website\n  Scripts->>+@tracetest/cypress: captures and injects traceparent meta tag\n  @tracetest/cypress->>+@tracetest/cypress: Executes test\n  @tracetest/cypress--\x3e>-Scripts: Ok\n  Scripts->>@tracetest/cypress: Waits for results and shows the summary"}),(0,a.kt)("h2",{id:"the-tracetestcypress-npm-package"},"The ",(0,a.kt)("inlineCode",{parentName:"h2"},"@tracetest/cypress")," npm Package"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"@tracetest/cypress")," npm package is a Cypress plugin that allows you to run Trace-based testing using Tracetest and Cypress. It is a wrapper around the Tracetest API that allows you to configure, orchestrate and run tests from Cypress."),(0,a.kt)("h2",{id:"requirements"},"Requirements"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Tracetest Account"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Sign up to ",(0,a.kt)("a",{parentName:"li",href:"https://app.tracetest.io"},(0,a.kt)("inlineCode",{parentName:"a"},"app.tracetest.io"))," or follow the ",(0,a.kt)("a",{parentName:"li",href:"/getting-started/installation"},"get started")," docs."),(0,a.kt)("li",{parentName:"ul"},"Create an ",(0,a.kt)("a",{parentName:"li",href:"/concepts/environments"},"environment"),"."),(0,a.kt)("li",{parentName:"ul"},"Create an ",(0,a.kt)("a",{parentName:"li",href:"/concepts/environment-tokens"},"environment token"),"."),(0,a.kt)("li",{parentName:"ul"},"Have access to the environment's ",(0,a.kt)("a",{parentName:"li",href:"/configuration/agent"},"agent API key"),".")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Pokeshop Demo:")),(0,a.kt)("p",null,"Clone the official ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/kubeshop/pokeshop"},"Tracetest Pokeshop Demo App Repo")," to your local machine."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/kubeshop/pokeshop.git\ncd pokeshop\n")),(0,a.kt)("p",null,"Before moving forward, run ",(0,a.kt)("inlineCode",{parentName:"p"},"npm i")," in the root folder to install the dependencies."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm i\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Docker"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Have ",(0,a.kt)("a",{parentName:"li",href:"https://docs.docker.com/get-docker/"},"Docker")," and ",(0,a.kt)("a",{parentName:"li",href:"https://docs.docker.com/compose/install/"},"Docker Compose")," installed on your machine.")),(0,a.kt)("h2",{id:"project-structure"},"Project Structure"),(0,a.kt)("p",null,"The project is built with Docker Compose."),(0,a.kt)("h3",{id:"pokeshop-demo-app"},"Pokeshop Demo App"),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"/live-examples/pokeshop/overview"},"Pokeshop Demo App")," is a complete example of a distributed application using different backend and front-end services, implementation code is written in Typescript."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file in the root directory is for the Pokeshop Demo app and the OpenTelemetry setup."),(0,a.kt)("p",null,"And the ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose.e2e.yml")," includes the ",(0,a.kt)("a",{parentName:"p",href:"/concepts/agent"},"Tracetest Agent"),"."),(0,a.kt)("p",null,"Finally, the Cypress end-to-end tests can be found in ",(0,a.kt)("inlineCode",{parentName:"p"},"cypress/e2e/1-getting-started"),"."),(0,a.kt)("h2",{id:"the-cypress-setup"},"The Cypress Setup"),(0,a.kt)("p",null,"The Cypress setup is generated by ",(0,a.kt)("a",{parentName:"p",href:"https://docs.cypress.io/guides/getting-started/installing-cypress"},"installing Cypress locally")," and configuring it from the UI after running ",(0,a.kt)("inlineCode",{parentName:"p"},"cypress open"),"."),(0,a.kt)("p",null,"The configuration script file is ",(0,a.kt)("inlineCode",{parentName:"p"},"cypress.config.ts")," looks like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=cypress.config.ts",title:"cypress.config.ts"},'import { defineConfig } from "cypress";\nimport { config } from "dotenv"; // loads the environment variables\n\nconfig();\n\nmodule.exports = defineConfig({\n  chromeWebSecurity: false,\n  e2e: {\n    baseUrl: process.env.POKESHOP_DEMO_URL || "http://localhost:3000",\n    env: {\n      TRACETEST_API_TOKEN: process.env.TRACETEST_API_TOKEN, // used to authenticate with Tracetest\n    },\n    setupNodeEvents() {\n      // implement node event listeners here\n    },\n  },\n});\n')),(0,a.kt)("h3",{id:"the-homecyts-test-script"},"The ",(0,a.kt)("inlineCode",{parentName:"h3"},"home.cy.ts")," Test Script"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"cypress/e2e/1-getting-started/home.cy.ts")," test script contains three different tests based on the Pokeshop Demo UI fetures, which are:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a Pokemon"),(0,a.kt)("li",{parentName:"ol"},"Import a Pokemon (using an async process)"),(0,a.kt)("li",{parentName:"ol"},"Delete a Pokemon")),(0,a.kt)("h3",{id:"tracetest-library-setup"},"Tracetest Library Setup"),(0,a.kt)("p",null,"If you go to the ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," file you will find the inclusion of a Tracetest package for Cypress ",(0,a.kt)("inlineCode",{parentName:"p"},"@tracetest/cypress"),"."),(0,a.kt)("p",null,"The first thing the test script does is import the package, grab the Tracetest API token from the environment variables and create the Tracetest instance."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=cypress/e2e/1-getting-started/home.cy.ts",title:"cypress/e2e/1-getting-started/home.cy.ts"},'import Tracetest, { Types } from "@tracetest/cypress";\n\nconst TRACETEST_API_TOKEN = Cypress.env("TRACETEST_API_TOKEN") || "";\nlet tracetest: Types.TracetestCypress | undefined = undefined;\n')),(0,a.kt)("p",null,"Afterward, during the ",(0,a.kt)("inlineCode",{parentName:"p"},"before")," hook, create the Tracetest instance with the API token."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=cypress/e2e/1-getting-started/home.cy.ts",title:"cypress/e2e/1-getting-started/home.cy.ts"},'before((done) => {\n  Tracetest({ apiToken: TRACETEST_API_TOKEN }).then((instance) => {\n    tracetest = instance;\n\n    // optional, set the definition files and run info for the tests\n    tracetest\n      .setOptions({\n        "imports a pokemon": {\n          definition,\n        },\n      })\n      .then(() => done());\n  });\n});\n')),(0,a.kt)("p",null,"Then, during the ",(0,a.kt)("inlineCode",{parentName:"p"},"beforeEach")," hook, the script ",(0,a.kt)("strong",{parentName:"p"},"captures")," the document to inject the ",(0,a.kt)("inlineCode",{parentName:"p"},"traceparent")," to the meta tag."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=cypress/e2e/1-getting-started/home.cy.ts",title:"cypress/e2e/1-getting-started/home.cy.ts"},'beforeEach(() => {\n  cy.visit("/", {\n    onBeforeLoad: (win) => tracetest.capture(win.document),\n  });\n});\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"OPTIONAL"),": If you want to wait for the test to finish and break the Cypress execution based on a failed Tracetest test, you can add the ",(0,a.kt)("inlineCode",{parentName:"p"},"after")," hook and call the ",(0,a.kt)("inlineCode",{parentName:"p"},"summary")," method."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=cypress/e2e/1-getting-started/home.cy.ts",title:"cypress/e2e/1-getting-started/home.cy.ts"},"after((done) => {\n  tracetest.summary().then(() => done());\n});\n")),(0,a.kt)("p",null,"The rest of the test script is the Cypress test definitions for the test cases mentioned above. The complete test script looks like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=cypress/e2e/1-getting-started/home.cy.ts",title:"cypress/e2e/1-getting-started/home.cy.ts"},"import Tracetest, { Types } from '@tracetest/cypress';\n\nconst TRACETEST_API_TOKEN = Cypress.env('TRACETEST_API_TOKEN') || '';\nlet tracetest: Types.TracetestCypress | undefined = undefined;\n\nconst definition = `\n  type: Test\n  spec:\n    id: aW1wb3J0cyBhIHBva2Vtb24=\n    name: imports a pokemon\n    trigger:\n      type: cypress\n    specs:\n    - selector: span[tracetest.span.type=\"http\"] span[tracetest.span.type=\"http\"]\n      name: \"All HTTP Spans: Status  code is 200\"\n      assertions:\n      - attr:http.status_code   =   200\n    - selector: span[tracetest.span.type=\"database\"]\n      name: \"All Database Spans: Processing time is less than 100ms\"\n      assertions:\n      - attr:tracetest.span.duration < 2s\n    outputs:\n    - name: MY_OUTPUT\n      selector: span[tracetest.span.type=\"general\" name=\"Tracetest trigger\"]\n      value: attr:name\n    `;\n\ndescribe('Home', { defaultCommandTimeout: 60000 }, () => {\n  before(done => {\n    Tracetest({ apiToken: TRACETEST_API_TOKEN }).then(instance => {\n      tracetest = instance;\n      tracetest\n        .setOptions({\n          'imports a pokemon': {\n            definition,\n          },\n        })\n        .then(() => done());\n    });\n  });\n\n  beforeEach(() => {\n    cy.visit('/', {\n      onBeforeLoad: win => tracetest.capture(win.document),\n    });\n  });\n\n  // uncomment to wait for trace tests to be done\n  after(done => {\n    tracetest.summary().then(() => done());\n  });\n\n  it('create a pokemon', () => {\n    cy.get('[data-cy=\"create-pokemon-button\"]').should('be.visible').click();\n    cy.get('[data-cy=\"create-pokemon-modal\"]').should('be.visible');\n    cy.get('#name').type('Pikachu');\n    cy.get('#type').type('Electric');\n    cy.get('#imageUrl').type('https://oyster.ignimgs.com/mediawiki/apis.ign.com/pokemon-blue-version/8/89/Pikachu.jpg');\n\n    cy.get('button').contains('OK').click();\n  });\n\n  it('imports a pokemon', () => {\n    cy.get('[data-cy=\"import-pokemon-button\"]').click();\n    cy.get('[data-cy=\"import-pokemon-form\"]').should('be.visible');\n\n    cy.get('[id=\"id\"]')\n      .last()\n      .type(Math.floor(Math.random() * 101).toString());\n    cy.get('button').contains('OK').click({ force: true });\n  });\n\n  it('deletes a pokemon', () => {\n    cy.get('[data-cy=\"pokemon-list\"]').should('be.visible');\n    cy.get('[data-cy=\"pokemon-card\"]').first().click().get('[data-cy=\"delete-pokemon-button\"]').first().click();\n  });\n});\n")),(0,a.kt)("h3",{id:"setting-the-environment-variables"},"Setting the Environment Variables"),(0,a.kt)("p",null,"Copy the ",(0,a.kt)("inlineCode",{parentName:"p"},".env.template")," content into a new ",(0,a.kt)("inlineCode",{parentName:"p"},".env")," file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title=Terminal",title:"Terminal"},"cp .env.template .env\n")),(0,a.kt)("p",null,"Add the ",(0,a.kt)("a",{parentName:"p",href:"/concepts/environment-tokens"},"Tracetest API Token")," and ",(0,a.kt)("a",{parentName:"p",href:"/configuration/agent"},"Tracetest Agent API Key")," to the ",(0,a.kt)("inlineCode",{parentName:"p"},"TRACETEST_API_TOKEN")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"TRACETEST_AGENT_API_KEY")," variables."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title=.env",title:".env"},"TRACETEST_API_TOKEN=<YOUR_API_TOKEN>\nTRACETEST_AGENT_API_KEY=<YOUR_AGENT_API_KEY>\nPOKESHOP_DEMO_URL=http://localhost:8081\n")),(0,a.kt)("h3",{id:"starting-the-pokeshop-demo-app"},"Starting the Pokeshop Demo App"),(0,a.kt)("p",null,"To start the Pokeshop Demo App, run the following command from the root directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker compose -f docker-compose.yml -f docker-compose.e2e.yml up\n")),(0,a.kt)("h3",{id:"running-the-tests"},"Running the Tests"),(0,a.kt)("p",null,"Next, you can run the tests by using both the Cypress CLI and the Cypress UI."),(0,a.kt)("h4",{id:"using-the-cypress-cli"},"Using the Cypress CLI"),(0,a.kt)("p",null,"To run the tests using the Cypress CLI, run the following command from the root directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm run cy:run\n")),(0,a.kt)("p",null,"You should see the following output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"> pokeshop@1.0.0 cy:run\n> cypress run\n\n\nDevTools listening on ws://127.0.0.1:54740/devtools/browser/8c9d2503-cbaa-4ef2-b716-5bc1ad6cf6c8\nMissing baseUrl in compilerOptions. tsconfig-paths will be skipped\n\n====================================================================================================\n\n  (Run Starting)\n\n  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n  \u2502 Cypress:        13.6.1                                                                         \u2502\n  \u2502 Browser:        Electron 114 (headless)                                                        \u2502\n  \u2502 Node Version:   v16.15.1 (/Users/oscarr.reyesgaucin/.nvm/versions/node/v16.15.1/bin/node)      \u2502\n  \u2502                                                                                                \u2502\n  \u2502 Specs:          1 found (home.cy.ts)                                                           \u2502\n  \u2502 Searched:       cypress/e2e/**/*.cy.{js,jsx,ts,tsx}                                            \u2502\n  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n  Running:  home.cy.ts                                                                      (1 of 1)\n\n\n  Home\n    \u2713 create a pokemon (4108ms)\n    \u2713 imports a pokemon (756ms)\n    \u2713 deletes a pokemon (2) (653ms)\n\n\n  3 passing (42s)\n\n\n  (Results)\n\n  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n  \u2502 Tests:        3                                                                                \u2502\n  \u2502 Passing:      3                                                                                \u2502\n  \u2502 Failing:      0                                                                                \u2502\n  \u2502 Pending:      0                                                                                \u2502\n  \u2502 Skipped:      0                                                                                \u2502\n  \u2502 Screenshots:  0                                                                                \u2502\n  \u2502 Video:        false                                                                            \u2502\n  \u2502 Duration:     41 seconds                                                                       \u2502\n  \u2502 Spec Ran:     home.cy.ts                                                                       \u2502\n  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n\n====================================================================================================\n\n  (Run Finished)\n\n\n       Spec                                              Tests  Passing  Failing  Pending  Skipped\n  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n  \u2502 \u2714  home.cy.ts                               00:41        3        3        -        -        - \u2502\n  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n    \u2714  All specs passed!                        00:41        3        3        -        -        -\n\n")),(0,a.kt)("h4",{id:"using-the-cypress-ui"},"Using the Cypress UI"),(0,a.kt)("p",null,"To run the tests using the Cypress UI, run the following command from the root directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm run cy:open\n")),(0,a.kt)("p",null,"Then, navigate your way to the ",(0,a.kt)("inlineCode",{parentName:"p"},"e2e")," section and select the ",(0,a.kt)("inlineCode",{parentName:"p"},"home.cy.ts")," test script."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Cypress UI",src:n(96532).Z,width:"1928",height:"995"})),(0,a.kt)("p",null,"You should see the three tests running and passing.\nAnd by looking at the browser console log you can find the statuses and results of the tests."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Cypress Results",src:n(41412).Z,width:"1925",height:"991"})),(0,a.kt)("p",null,"Then, you can follow any of the result links in the console log to the Tracetest App and see the results of the tests."),(0,a.kt)("p",null,"The Tracetest library uses the spec name for the trace-based tests. That way you can identify them more easily and it also fills some of the metadata directly from the Cypress execution."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Tracetest App",src:n(78053).Z,width:"2560",height:"1600"})),(0,a.kt)("p",null,"Lastly, you can now create assertions based on the trace data that was captured from the browser to the backend services."),(0,a.kt)("p",null,"Starting with the click events and the fetch request from the client side, to the HTTP requests and database queries from the backend services, including async processes like the one showcased during the import pokemon test."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Tracetest App",src:n(53682).Z,width:"2560",height:"1600"})))}h.isMDXComponent=!0},41412:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/cypress-open-results-1d9fd3501f3a6b954380daafefc1c7d3.png"},96532:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/cypress-scripts-d6be4270232baaa92a5cfc6fb1360ca6.png"},53682:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/cypress-tracetest-import-pokemon-test-774ed301f1c75df4e37d347dbc6afc30.png"},78053:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/cypress-tracetest-tests-fa1646a319ed10046db42864886ed3ee.png"}}]);